-- PDA_Custom
UIRelations = nil
class "pda_relations_tab" (CUIScriptWnd)
function pda_relations_tab:__init() super()
	self.list = {
		"stalker",
		"dolg",
		"freedom",
		"csky",
		"ecolog",
		"killer",
		"army",
		"bandit",
		"monolith"
	}

	self.char_icon 		= {}
	self.name			= {}
	self.comm			= {}
	self.rank			= {}
	self.dist			= {}
	self.leader_icon 	= {}
	self.health		 	= {}
	self.hint 			= {}
	
	self:InitControls()
	self:Reset()
end

function pda_relations_tab:__finalize() end

local function pos_in_rect(p,r)
	return (p.x >= r.x1) and (p.x <= r.x2) and (p.y >= r.y1) and (p.y <= r.y2)
end 

function pda_relations_tab:InitControls()
	self:SetWndRect(Frect():set(0, 0, 1024, 768))
	
	local xml = CScriptXmlInit()
	xml:ParseFile("pda_relations.xml")
	
	xml:InitFrame("frame",self)
	xml:InitStatic("center_background", self)
	self.tab = xml:InitStatic("tab", self)
	xml:InitStatic("tab:caption", self.tab)
	
	-- Relation Matrix
	self.relations = {}
	
	local is_widescreen = WIDESCREEN()
	local x = is_widescreen and 40 or 80
	local c_width = is_widescreen and 75 or 150
	local c_height = is_widescreen and 35 or 70
	
	for i=1, #self.list do
		x = x + c_width
		local iobj = xml:InitTextWnd("tab:faction", self.tab)
		iobj:SetWndPos(vector2():set(x,65))
		iobj:SetText(game.translate_string(self.list[i]))
		
		self.relations[i] = {}
		local y = 60
		for k=0, #self.list do
			y = y + c_height
			if (i == 1) then
				local kobj = xml:InitTextWnd("tab:faction", self.tab)
				kobj:SetWndPos(vector2():set(40,y))
				if k > 0 then
					kobj:SetText(game.translate_string(self.list[k]))
				else 
					kobj:SetText(game.translate_string("st_actor_generic_name"))
				end
			end
			self.relations[i][k] = xml:InitTextWnd("tab:cell",self.tab)
			self.relations[i][k]:SetWndPos(vector2():set(x,y))
		end
	end

	-- Companion ListView
	xml:InitFrame("companion_frame",self)
	xml:InitStatic("companion_background", self)
	
	self.companion_listbox = xml:InitListBox("companion_wnd", self)
	self.companion_listbox:SetItemHeight(140)
	
	for row=1,4 do
		local row_form = ui_companion_row(self,row,xml)
		row_form:SetWndSize(vector2():set(740,140))
		self.companion_listbox:AddExistingItem(row_form)
	end
	
	-- Hint Window
	self.hint_wnd = xml:InitFrame("hint_wnd:background",self)
	self.hint_wnd_text = xml:InitTextWnd("hint_wnd:text", self.hint_wnd)
	
	--self.hint_wnd:SetColor(GetARGB(255,0,0,0))
end

function pda_relations_tab:Update()
	for i=1, 20 do -- should be row*col from ui_companion_row
		if (self.char_icon[i]:IsShown()) then 
			local pos = GetCursorPosition()
			local rect = Frect():set(0,0,0,0)
			self.char_icon[i]:GetAbsoluteRect(rect)

			if (pos_in_rect(pos,rect)) then 
				self.hint_wnd_text:SetText(self.hint[i])
				self.hint_wnd_text:AdjustHeightToText()
				self.hint_wnd:SetWndSize(vector2():set(self.hint_wnd:GetWidth(),self.hint_wnd_text:GetHeight()+44))
				
				pos.y = pos.y - self.hint_wnd:GetHeight()
				pos.x = pos.x - self.hint_wnd:GetWidth()
				self.hint_wnd:SetWndPos(pos)

				--FitInRect(self.background,self.rect,0,0)
				return
			end
		end
	end
	self.hint_wnd:SetWndPos(vector2():set(-2048,-2048))
end 

function pda_relations_tab:Reset()
	for i=1, #self.list do
		for k=0, #self.list do
			local comm = self.list[k] or db.actor:character_community()
			local r_val = relation_registry.community_relation(comm, self.list[i])
			if r_val >= game_relations.FRIENDS then
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_friendly"))
				self.relations[i][k]:SetTextColor(GetARGB(255, 1, 255, 1))
			elseif r_val <= game_relations.ENEMIES then
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_enemy"))
				self.relations[i][k]:SetTextColor(GetARGB(255, 255, 1, 1))
			else
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_indifferent"))
				self.relations[i][k]:SetTextColor(GetARGB(255, 255, 255, 1))
			end
			if (DEV_DEBUG and axr_main.config:r_value("mm_options","enable_debug_hud",1,false) == true) then
				self.relations[i][k]:SetText(tostring(r_val))
			end
		end
	end

	local clist = axr_companions.list_actor_squad_by_id()
	for i=1,20 do -- should be row*col from ui_companion_row
		local se_obj = clist[i] and alife():object(clist[i])
		if (se_obj and IsStalker(nil,se_obj:clsid()) and se_obj:alive()) then
			local npc = db.storage[se_obj.id] and db.storage[se_obj.id].object
			
			local icon_name = npc and npc:character_icon() or se_obj:character_icon()
			icon_name = icon_name and icon_name ~= "" and icon_name or "ui\\ui_noise"
			self.char_icon[i]:InitTexture(icon_name)
			self.char_icon[i]:Show(true)
			
			self.name[i]:SetText(se_obj:character_name())
			self.comm[i]:SetText(game.translate_string(se_obj:community()))
			self.rank[i]:SetText(game.translate_string("st_rank_"..ranks.get_se_obj_rank_name(se_obj)).." ("..se_obj:rank()..")")
			self.dist[i]:SetText(string.format("Distance to: %.2f", se_obj.position:distance_to(db.actor:position())))
			
			-- leader and relation status
			local squad = se_obj.group_id and se_obj.group_id ~= 65535 and alife():object(se_obj.group_id)
			if (squad and squad:commander_id() == se_obj.id) then
				self.leader_icon[i]:Show(true)
				if (npc) then 
					local rel = npc:relation(db.actor)
					if (rel == game_object.friend) then 
						self.leader_icon[i]:SetTextureColor(GetARGB(255,0,255,0))
					elseif (rel == game_object.neutral) then
						self.leader_icon[i]:SetTextureColor(GetARGB(255,193,193,193))
					end
				end
			else
				self.leader_icon[i]:Show(false)
			end
			
			-- health status
			if (npc) then 
				local hp = math.floor(npc.health*100)
				self.health[i]:SetText(hp.."%")
				if (hp > 70) then 
					self.health[i]:SetTextColor(GetARGB(200, 0, 255, 0))
				elseif (hp < 30) then
					self.health[i]:SetTextColor(GetARGB(200, 255, 0, 0))
				else
					self.health[i]:SetTextColor(GetARGB(200, 255, 255, 255))
				end
			end
			
			-- hint 
			local state_str = "%c[255,215,215,215]States:%c[default] \\n"
			
			if (alife():has_info(se_obj.id,"npcx_beh_ignore_actor_enemies")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_attack_only_actor_combat_enemy_state") .. "\\n"
			elseif (alife():has_info(se_obj.id,"npcx_beh_ignore_combat")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_ignore_combat_state") .. "\\n"
			else 
				state_str = state_str .. game.translate_string("st_set_companion_to_attack_state") .. "\\n"
			end
			
			if (alife():has_info(se_obj.id,"npcx_beh_substate_stealth")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_stealth_state") .. "\\n"
			end 
			
			if (alife():has_info(se_obj.id,"npcx_beh_wait")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_wait_state") .. "\\n"
			elseif (alife():has_info(se_obj.id,"npcx_beh_patrol_mode")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_patrol_state") .. "\\n"
			else 
				state_str = state_str .. game.translate_string("st_set_companion_to_follow_state") .. "\\n"
			end

			if (alife():has_info(se_obj.id,"npcx_beh_gather_items")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_loot_corpse_state") .. "\\n"
			end 
			
			if (alife():has_info(se_obj.id,"npcx_beh_loot_corpses")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_loot_items_state") .. "\\n"
			end		
			
			state_str = state_str .. " \\n%c[255,215,215,215]Stats:%c[default] \\n"
			
			local m_data = alife_storage_manager.get_se_obj_state(se_obj)
			if (m_data) then 
				if (m_data.stalkers_killed) then 
					state_str = state_str .. game.translate_string("st_stalkers_killed") .. ": " .. tostring(m_data.stalkers_killed) .. "\\n"
				end
				if (m_data.mutants_killed) then 
					state_str = state_str .. game.translate_string("st_mutants_killed") .. ": " .. tostring(m_data.mutants_killed) .. "\\n"
				end
				if (m_data.artefacts_found) then 
					state_str = state_str .. game.translate_string("st_artefacts_found") .. ": " .. tostring(m_data.artefacts_found) .. "\\n"
				end				
			end
			
			self.hint[i] = state_str
		else 
			self.char_icon[i]:Show(false)
			self.leader_icon[i]:Show(false)
			self.health[i]:SetText("")
			self.name[i]:SetText("")
			self.comm[i]:SetText("")
			self.rank[i]:SetText("")
			self.dist[i]:SetText("")
		end
	end
end
---------
class "ui_companion_row" (CUIListBoxItem)
function ui_companion_row:__init(owner,row,xml) super(owner,row,xml)
	self:GetTextItem():SetText("")

	local x = 20
	local y = 0
	
	for i=1,5 do 
		local n = i+(5*(row-1))
		
		owner.hint[n] = "This is a test\n\nHint my dude"
		
		owner.char_icon[n] = self:AddIconField(i+10)
		owner.char_icon[n]:InitTexture("ui\\ui_noise")
		owner.char_icon[n]:SetStretchTexture(true)
		owner.char_icon[n]:SetWndSize(vector2():set(64,64))
		owner.char_icon[n]:SetWndPos(vector2():set(x,y))
		
		owner.leader_icon[n] = self:AddIconField(i+11)
		owner.leader_icon[n]:InitTexture("ui_minimap_squad_leader")
		owner.leader_icon[n]:SetStretchTexture(true)
		owner.leader_icon[n]:SetWndSize(vector2():set(10,10))
		owner.leader_icon[n]:SetWndPos(vector2():set(x,y))
		
		owner.health[n] = self:AddTextField("",i+12)
		owner.health[n]:SetFont(GetFontSmall())
		owner.health[n]:SetWndSize(vector2():set(50,10))
		owner.health[n]:SetWndPos(vector2():set(x+50,y+55))

		owner.name[n] = self:AddTextField("",i+13)
		owner.name[n]:SetFont(GetFontLetterica18Russian())
		owner.name[n]:SetWndSize(vector2():set(120,22))
		owner.name[n]:SetWndPos(vector2():set(x,y+65))

		owner.comm[n] = self:AddTextField("",i+14)
		owner.comm[n]:SetFont(GetFontLetterica16Russian())
		owner.comm[n]:SetWndSize(vector2():set(120,20))
		owner.comm[n]:SetWndPos(vector2():set(x,y+90))
		
		owner.rank[n] = self:AddTextField("",i+15)
		owner.rank[n]:SetFont(GetFontLetterica16Russian())
		owner.rank[n]:SetWndSize(vector2():set(120,20))
		owner.rank[n]:SetWndPos(vector2():set(x,y+105))
		
		owner.dist[n] = self:AddTextField("",i+16)
		owner.dist[n]:SetFont(GetFontLetterica16Russian())
		owner.dist[n]:SetWndSize(vector2():set(120,20))
		owner.dist[n]:SetWndPos(vector2():set(x,y+120))
	
		x = x + 150
	end
end