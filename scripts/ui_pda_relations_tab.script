local mouse_over_id = nil

-- PDA_Custom
UIRelations = nil
class "pda_relations_tab" (CUIScriptWnd)
function pda_relations_tab:__init() super()
	self.list = {
		"stalker",
		"dolg",
		"freedom",
		"csky",
		"ecolog",
		"killer",
		"army",
		"bandit",
		"monolith"
	}
	
	self.color_codes = {
		GetARGB(255,255,255,255),
		GetARGB(255,255,128,0),
		GetARGB(255,0,255,255),
		GetARGB(255,0,255,128),
		GetARGB(255,0,128,255),
		GetARGB(255,255,0,128),
		GetARGB(255,128,255,0),
		GetARGB(255,255,0,0),
		GetARGB(255,0,255,0),
		GetARGB(255,0,0,255),
		GetARGB(255,128,0,255),
	}
	
	self.companion_info = {}
	self.to_text		= true
	self._tmr 			= time_global()
	
	self:InitControls()
	self:Reset()
end

function pda_relations_tab:__finalize() end

function pda_relations_tab:InitControls()
	self:SetWndRect(Frect():set(0, 0, 1024, 768))

	local xml = CScriptXmlInit()
	xml:ParseFile("pda_relations.xml")

	xml:InitFrame("frame",self)
	xml:InitStatic("center_background", self)
	self.tab = xml:InitStatic("tab", self)
	xml:InitStatic("tab:caption", self.tab)
	
	self.btn = xml:Init3tButton("btn_to_text", self)
	self:Register(self.btn, "btn")
	self:AddCallback("btn", ui_events.BUTTON_CLICKED, self.btn_to_text, self)

	-- Relation Matrix
	self.relations = {}
	
	local is_widescreen = WIDESCREEN()
	local x = is_widescreen and 40 or 55
	local c_width = is_widescreen and 75 or 90
	local c_height = 35

	for i=1, #self.list do
		x = x + c_width
		local iobj = xml:InitTextWnd("tab:faction", self.tab)
		iobj:SetWndPos(vector2():set(x,65))
		iobj:SetText(game.translate_string(self.list[i]))
		
		self.relations[i] = {}
		local y = 60
		for k=0, #self.list do
			y = y + c_height
			if (i == 1) then
				local kobj = xml:InitTextWnd("tab:faction", self.tab)
				kobj:SetWndPos(vector2():set(x - c_width, y))
				if k > 0 then
					kobj:SetText(game.translate_string(self.list[k]))
				else 
					kobj:SetText(game.translate_string("st_actor_generic_name"))
				end
			end
			self.relations[i][k] = xml:InitTextWnd("tab:cell",self.tab)
			self.relations[i][k]:SetWndPos(vector2():set(x,y))
		end
	end

	-- Companion ListView
	xml:InitFrame("companion_frame",self)
	xml:InitStatic("companion_background",self)

	self.companion_listbox = xml:InitListBox("companion_wnd",self)
	self.companion_listbox:SetItemHeight(140)
	self:Register(self.companion_listbox, "list_companion")
	self:AddCallback("list_companion",ui_events.LIST_ITEM_CLICKED,self.OnSelectCompanionList,self)
	
	self.auto_chk = xml:InitCheck("auto_check",self)
	self.auto_chk:SetCheck(false)
	
	for row=1,4 do
		local row_form = ui_companion_row(self,row,xml)
		row_form:SetWndSize(vector2():set(740,140))
		self.companion_listbox:AddExistingItem(row_form)
	end
	
	-- Hint Window
	self.hint_wnd = xml:InitFrame("hint_wnd:background",self)
	self.hint_wnd_text = xml:InitTextWnd("hint_wnd:text",self.hint_wnd)
end

function pda_relations_tab:btn_to_text()
	self.to_text = not self.to_text
	if self.to_text then
		self.btn:TextControl():SetText(game.translate_string("pda_table_value_off"))
	else
		self.btn:TextControl():SetText(game.translate_string("pda_table_value_on"))
	end
	
	self:Reset()
end

function pda_relations_tab:OnSelectCompanionList()
	if not (mouse_over_id) then 
		return 
	end 
	
	local id = self.companion_info[mouse_over_id].id
	local npc = id and db.storage[id] and db.storage[id].object 
	if not (npc) then 
		return 
	end 
	
	pda_relations_context_actions.init(self,npc,id)
end 

function pda_relations_tab:Update()
	CUIScriptWnd.Update(self)
	-- option to auto update values
	if self.auto_chk:GetCheck() then
		local tg = time_global()
		if self._tmr < tg then
			self._tmr = tg + 2000
			self:autoupdate()
		end
	end

	if not (self.disabled) then
		for i=1, 20 do -- should be row*col from ui_companion_row
			if (self.companion_info[i].icon_wnd:IsShown()) then 
				local pos = GetCursorPosition()
				local rect = Frect():set(0,0,0,0)
				self.companion_info[i].icon_wnd:GetAbsoluteRect(rect)

				if (utils.pos_in_rect(pos,rect)) then 
					self.hint_wnd_text:SetText(self.companion_info[i].hint)
					self.hint_wnd_text:AdjustHeightToText()
					self.hint_wnd:SetWndSize(vector2():set(self.hint_wnd:GetWidth(),self.hint_wnd_text:GetHeight()+44))
					
					pos.y = pos.y - self.hint_wnd:GetHeight()
					pos.x = pos.x - self.hint_wnd:GetWidth()
					self.hint_wnd:SetWndPos(pos)

					--FitInRect(self.background,self.rect,0,0)
					
					mouse_over_id = i
					
					return
				end
			end
		end
	end
	mouse_over_id = nil
	self.hint_wnd:SetWndPos(vector2():set(-2048,-2048))
end

function pda_relations_tab:Reset()
	for i=1, #self.list do
		for k=0, #self.list do
			local comm = self.list[k] or db.actor:character_community()
			local r_val = relation_registry.community_relation(comm, self.list[i])
			if r_val >= game_relations.FRIENDS then
				self.relations[i][k]:SetTextColor(GetARGB(255, 1, 255, 1))
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_friendly"))

			elseif r_val <= game_relations.ENEMIES then
				self.relations[i][k]:SetTextColor(GetARGB(255, 255, 1, 1))
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_enemy"))

			else
				self.relations[i][k]:SetTextColor(GetARGB(255, 255, 255, 1))
				self.relations[i][k]:SetText(game.translate_string("st_goodwill_indifferent"))

			end
			--if xrs_debug_tools.feature_is_active then self.relations[i][k]:SetText(tostring(r_val)) end

			if not (self.to_text) then self.relations[i][k]:SetText(tostring(r_val)) end

		end
	end

	self:autoupdate()
end

function pda_relations_tab:autoupdate()
	local id_to_code = {}
	local clist = axr_companions.list_actor_squad_by_id()
	for i=1,20 do -- should be row*col from ui_companion_row
		local se_obj = clist[i] and alife():object(clist[i])
		if (se_obj and IsStalker(nil,se_obj:clsid()) and se_obj:alive() and alife():has_info(se_obj.id,"npcx_is_companion")) then
			self.companion_info[i].id = se_obj.id 
			
			local npc = db.storage[se_obj.id] and db.storage[se_obj.id].object

			local icon_name = npc and npc:character_icon() or se_obj:character_icon()
			icon_name = icon_name and icon_name ~= "" and icon_name or "ui\\ui_noise"
			self.companion_info[i].icon_wnd:InitTexture(icon_name)
			self.companion_info[i].icon_wnd:Show(true)
			
			self.companion_info[i].name_wnd:SetText(se_obj:character_name())
			self.companion_info[i].comm_wnd:SetText(game.translate_string(se_obj:community()))
			self.companion_info[i].rank_wnd:SetText(game.translate_string("st_rank_"..ranks.get_se_obj_rank_name(se_obj)).." ("..se_obj:rank()..")")
			self.companion_info[i].dist_wnd:SetText(string.format("Distance to: %.2f", se_obj.position:distance_to(db.actor:position())))

			-- leader and relation status
			local squad = se_obj.group_id and se_obj.group_id ~= 65535 and alife():object(se_obj.group_id)
			if (squad and squad:commander_id() == se_obj.id) then
				self.companion_info[i].leader_wnd:Show(true)
				self.companion_info[i].leader_wnd:InitTexture("ui_minimap_squad_leader")
			else
				self.companion_info[i].leader_wnd:Show(true)
				self.companion_info[i].leader_wnd:InitTexture("ui_minimap_point")
			end
			
			-- Set color code
			if not (id_to_code[se_obj.group_id]) then 
				local n = 1
				for k,v in pairs(id_to_code) do 
					n = n + 1
				end
				id_to_code[se_obj.group_id] = self.color_codes[n] or self.color_codes[1]
			end
			self.companion_info[i].leader_wnd:SetTextureColor(id_to_code[se_obj.group_id])
			
			
			-- health status
			if (npc) then 
				local hp = math.floor(npc.health*100)
				self.companion_info[i].health_wnd:SetText(hp.."%")
				if (hp > 70) then 
					self.companion_info[i].health_wnd:SetTextColor(GetARGB(200, 0, 255, 0))
				elseif (hp < 30) then
					self.companion_info[i].health_wnd:SetTextColor(GetARGB(200, 255, 0, 0))
				else
					self.companion_info[i].health_wnd:SetTextColor(GetARGB(200, 255, 255, 255))
				end
			end
			
			-- hint 
			local state_str = "%c[255,215,215,215]States:%c[default] \\n"
			
			if (alife():has_info(se_obj.id,"npcx_beh_ignore_actor_enemies") and alife():has_info(se_obj.id,"npcx_beh_ignore_combat")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_ignore_combat_state") .. "\\n"
			elseif (alife():has_info(se_obj.id,"npcx_beh_ignore_combat")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_attack_only_actor_combat_enemy_state") .. "\\n"
			else 
				state_str = state_str .. game.translate_string("st_set_companion_to_attack_state") .. "\\n"
			end
			
			if (alife():has_info(se_obj.id,"npcx_beh_substate_stealth")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_stealth_state") .. "\\n"
			end 
			
			if (alife():has_info(se_obj.id,"npcx_beh_wait")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_wait_state") .. "\\n"
			elseif (alife():has_info(se_obj.id,"npcx_beh_patrol_mode")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_patrol_state") .. "\\n"
			else 
				state_str = state_str .. game.translate_string("st_set_companion_to_follow_state") .. "\\n"
			end
			
			if (alife():has_info(se_obj.id,"npcx_beh_distance_far")) then 
				state_str = state_str .. game.translate_string("st_pda_distance_state_far") .. "\\n"
			else 
				state_str = state_str .. game.translate_string("st_pda_distance_state_near") .. "\\n"
			end
	

			if (alife():has_info(se_obj.id,"npcx_beh_gather_items")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_loot_corpse_state") .. "\\n"
			end 
			
			if (alife():has_info(se_obj.id,"npcx_beh_loot_corpses")) then 
				state_str = state_str .. game.translate_string("st_set_companion_to_loot_items_state") .. "\\n"
			end		
			
			state_str = state_str .. " \\n%c[255,215,215,215]Stats:%c[default] \\n"
			
			local m_data = alife_storage_manager.get_se_obj_state(se_obj)
			if (m_data) then 
				if (m_data.stalkers_killed) then 
					state_str = state_str .. game.translate_string("st_stalkers_killed") .. ": " .. tostring(m_data.stalkers_killed) .. "\\n"
				end
				if (m_data.mutants_killed) then 
					state_str = state_str .. game.translate_string("st_mutants_killed") .. ": " .. tostring(m_data.mutants_killed) .. "\\n"
				end
				if (m_data.artefacts_found) then 
					state_str = state_str .. game.translate_string("st_artefacts_found") .. ": " .. tostring(m_data.artefacts_found) .. "\\n"
				end				
			end
			
			self.companion_info[i].hint = state_str
		else 
			self.companion_info[i].id = nil
			self.companion_info[i].icon_wnd:Show(false)
			self.companion_info[i].leader_wnd:Show(false)
			self.companion_info[i].health_wnd:SetText("")
			self.companion_info[i].name_wnd:SetText("")
			self.companion_info[i].comm_wnd:SetText("")
			self.companion_info[i].rank_wnd:SetText("")
			self.companion_info[i].dist_wnd:SetText("")
		end
	end
end
---------
class "ui_companion_row" (CUIListBoxItem)
function ui_companion_row:__init(owner,row,xml) super(owner,row,xml)
	self:GetTextItem():SetText("")

	local is_widescreen = WIDESCREEN()
	local x = is_widescreen and 20 or 35
	local y = 0
	
	for i=1,5 do 
		local n = i+(5*(row-1))
		
		owner.companion_info[n] = {
			["id"]				= nil,
			["icon_wnd"] 		= self:AddIconField(i+10),
			["leader_wnd"] 		= self:AddIconField(i+11),
			["name_wnd"]		= self:AddTextField("",i+12),
			["comm_wnd"]		= self:AddTextField("",i+13),
			["rank_wnd"]		= self:AddTextField("",i+14),
			["health_wnd"]		= self:AddTextField("",i+15),
			["dist_wnd"]		= self:AddTextField("",i+16),
			["code_wnd"] 		= self:AddTextField("",i+17),
			["hint"]			= ""
		}
		
		owner.companion_info[n].icon_wnd:InitTexture("ui\\ui_noise")
		owner.companion_info[n].icon_wnd:SetStretchTexture(true)
		owner.companion_info[n].icon_wnd:SetWndSize(vector2():set(64,64))
		owner.companion_info[n].icon_wnd:SetWndPos(vector2():set(x,y))
		
		owner.companion_info[n].leader_wnd:InitTexture("ui_minimap_squad_leader")
		owner.companion_info[n].leader_wnd:SetStretchTexture(true)
		owner.companion_info[n].leader_wnd:SetWndSize(vector2():set(is_widescreen and 8 or 10,10))
		owner.companion_info[n].leader_wnd:SetWndPos(vector2():set(x,y))

		owner.companion_info[n].name_wnd:SetFont(GetFontLetterica18Russian())
		owner.companion_info[n].name_wnd:SetWndSize(vector2():set(120,22))
		owner.companion_info[n].name_wnd:SetWndPos(vector2():set(x,y+65))

		owner.companion_info[n].comm_wnd:SetFont(GetFontLetterica16Russian())
		owner.companion_info[n].comm_wnd:SetWndSize(vector2():set(120,20))
		owner.companion_info[n].comm_wnd:SetWndPos(vector2():set(x,y+90))
		
		owner.companion_info[n].rank_wnd:SetFont(GetFontLetterica16Russian())
		owner.companion_info[n].rank_wnd:SetWndSize(vector2():set(120,20))
		owner.companion_info[n].rank_wnd:SetWndPos(vector2():set(x,y+105))
		
		owner.companion_info[n].health_wnd:SetFont(GetFontSmall())
		owner.companion_info[n].health_wnd:SetWndSize(vector2():set(50,10))
		owner.companion_info[n].health_wnd:SetWndPos(vector2():set(x+50,y+55))

		owner.companion_info[n].dist_wnd:SetFont(GetFontLetterica16Russian())
		owner.companion_info[n].dist_wnd:SetWndSize(vector2():set(120,20))
		owner.companion_info[n].dist_wnd:SetWndPos(vector2():set(x,y+120))

		x = x + (is_widescreen and 150 or 180)
	end
end