function on_game_start()
	RegisterScriptCallback("actor_on_before_death",actor_on_before_death)
	RegisterScriptCallback("on_game_load",on_game_load)
end

function on_game_load()
	if not (alife_storage_manager.get_state().enable_azazel_mode) then
		return
	end
	local victim_id = axr_main.config:r_value("temp","azazel_death",2)
	if (victim_id) then
		local se_obj = alife():object(victim_id)
		if (se_obj) then
			safe_release_manager.release(se_obj)
		end
		-- cancel all not-story tasks
		local task_info = task_manager.get_task_manager().task_info
		local task_ini = task_manager.task_ini
		for task_id,tbl in pairs(task_info) do
			if not (tbl.storyline) then 
				tbl.forced_status = "fail"
				tbl.cancelled_by_actor = true
			end
		end
		-- Heal 
		bind_stalker_ext.invulnerable_time = 30000
		db.actor:set_health_ex(1)
		db.actor.psy_health = 1
		db.actor.bleeding = 1
		db.actor.radiation = -1
		db.actor.power = 1
		SetHudMsg(strformat(game.translate_string("st_death_count"),xr_statistic.actor_statistic.deaths),8)
		axr_main.config:w_value("temp","azazel_death")
		level.disable_input()
		level.remove_cam_effector(210409)
		level.add_cam_effector("camera_effects\\prison_1.anm", 210409, false, "survival_mode.cam_effector_end")
		level.add_pp_effector("deimos1.ppe", 210410, false)
	end
end

function actor_on_before_death(whoID,flags)
	if not (alife_storage_manager.get_state().enable_azazel_mode) then
		return
	end

	xr_statistic.actor_statistic.deaths = xr_statistic.actor_statistic.deaths + 1
	SetHudMsg(strformat(game.translate_string("st_death_count"),xr_statistic.actor_statistic.deaths),8)
	
	bind_stalker_ext.invulnerable_time = 30000
	db.actor:set_health_ex(1)
	db.actor.psy_health = 1
	db.actor.bleeding = 1
	db.actor.radiation = -1
	db.actor.power = 1

	local ignore_list = {	
		["bolt"] = true,
		["device_torch"] = true,
		["device_pda"] = true,
		["wpn_binoc"] = true,
		["medkit_script"] = true,
		["guitar_a"] = true,
		["harmonica_a"] = true,
		["anim_binoc"] = true,
		["anim_knife"] = true,
		["hand_radio"] = true,
		["hand_radio_r"] = true,
		["stick_bred"] = true,
		["stick_kolbasa"] = true,
		["stick_kolbasa_bred"] = true,
		["wpn_knife"] = true
	}
	local sim = alife()
	local function release_actor_item(temp, item)
		if not (ignore_list[item:section()]) then
			local se_item = sim:object(item:id())
			if (se_item) then
				sim:release(se_item,true)
			end
		end
	end
	db.actor:iterate_inventory(release_actor_item,nil)
	
	local gg = game_graph()
	local t = {}
	for i=1,65534 do 
		local se_obj = sim:object(i)
		if (se_obj and IsStalker(nil,se_obj:clsid()) and se_obj:alive() and se_obj:community() ~= "zombied" and se_obj.group_id ~= 65535) then 
			if (IsSurvivalMode() or get_object_story_id(se_obj.group_id) == nil) and (axr_companions.companion_squads[se_obj.group_id] == nil) then
				--if (sim:level_name(gg:vertex(se_obj.m_game_vertex_id):level_id()) == level.name()) then
					table.insert(t,se_obj.id)
				--end
			end
		end
	end

	if (#t == 0) then 
		SetHudMsg(strformat(game.translate_string("st_death_count").." " .. game.translate_string("st_nobody_left_to_replace"),xr_statistic.actor_statistic.deaths),10)
		return
	end
	
	axr_companions.remove_all_from_actor_squad()
	
	local se_obj = sim:object(t[math.random(#t)])
	
	-- make squad actor companions
	local squad = alife():object(se_obj.group_id)
	if (squad) then 
		for k in squad:squad_members() do 
			if (k.id ~= se_obj.id) then
				for i=1,3 do
					local c = utils.load_var(db.actor,"companion_"..i,nil)
					if not (c) then
						utils.save_var(db.actor,"companion_"..i,k.id)
						db.actor:give_info_portion("axr_has_companion")
						utils.se_obj_save_var(k.id,k.object:name(),"companion",true)
						local member = db.storage[k.id] and db.storage[k.id].object 
						if (member) then
							axr_companions.setup_companion_logic(member,db.storage[k.id],false)
						end
						break
					end
				end
			end
		end
	end
	
	-- copy data over to player
	if (db.actor_binder and db.actor_binder.character_icon) then 
		db.actor_binder.character_icon = se_obj:character_icon()
		db.actor:set_character_icon(db.actor_binder.character_icon)
	end
	
	local se_actor = sim:actor()
	se_actor:set_character_name(se_obj:character_name())
	
	local faction = se_obj:community()
	se_actor:set_rank(se_obj:rank())
	db.actor:set_character_community("actor_"..faction)
	db.actor:set_character_reputation(se_obj:reputation())
	db.actor:give_money(random_choice(500,1000,1500,2000,2500))
	
	game_relations.set_community_goodwill_for_faction("actor_"..faction)
	
	for i=1,65534 do 
		local se_item = sim:object(i)
		if (se_item and se_item.parent_id == se_obj.id) then
			local sec = se_item:section_name()
			if not (ignore_list[sec]) then
				give_object_to_actor(sec)
			end
		end
	end
	
	local section = se_obj:section_name()
	if (string.find(section,"_4")) then 
		local f = {
			["stalker"] = "exo_outfit",
			["bandit"] = "bandit_exo_outfit",
			["csky"] = "cs_heavy_outfit",
			["killer"] = "exo_outfit",
			["army"] = "military_exo_outfit",
			["dolg"] = "dolg_exo_outfit",
			["freedom"] = "svoboda_exo_outfit",
			["ecolog"] = "ecolog_outfit_orange",
			["monolith"] = "monolith_exo_outfit"
		}
		give_object_to_actor(f[faction] or "novice_outfit")
	elseif (string.find(section,"_3")) then 
		local f = {
			["stalker"] = "exo_outfit",
			["bandit"] = "bandit_exo_outfit",
			["csky"] = "cs_heavy_outfit",
			["killer"] = "merc_scientific_outfit",
			["army"] = "specops_outfit",
			["dolg"] = "dolg_scientific_outfit",
			["freedom"] = "svoboda_heavy_outfit",
			["ecolog"] = "ecolog_outfit_orange",
			["monolith"] = "monolith_scientific_outfit"
		}
		give_object_to_actor(f[faction] or "novice_outfit")		
	elseif (string.find(section,"_2")) then 
		local f = {
			["stalker"] = "stalker_outfit",
			["bandit"] = "trenchcoat_outfit",
			["csky"] = "cs_light_outfit",
			["killer"] = "merc_outfit",
			["army"] = "military_outfit",
			["dolg"] = "dolg_outfit",
			["freedom"] = "svoboda_light_outfit",
			["ecolog"] = "ecolog_outfit_green",
			["monolith"] = "monolith_outfit"
		}
		give_object_to_actor(f[faction] or "novice_outfit")		
	elseif (string.find(section,"_1")) then 
		local f = {
			["stalker"] = "stalker_outfit",
			["bandit"] = "trenchcoat_outfit",
			["csky"] = "cs_light_outfit",
			["killer"] = "merc_outfit",
			["army"] = "military_outfit",
			["dolg"] = "dolg_outfit",
			["freedom"] = "svoboda_light_outfit",
			["ecolog"] = "ecolog_outfit_green",
			["monolith"] = "monolith_outfit"
		}
		give_object_to_actor(f[faction] or "novice_outfit")		
	else 
		local f = {
			["stalker"] = "novice_outfit",
			["bandit"] = "bandit_novice_outfit",
			["csky"] = "cs_novice_outfit",
			["killer"] = "merc_novice_outfit",
			["army"] = "military_novice_outfit",
			["dolg"] = "dolg_novice_outfit",
			["freedom"] = "svoboda_novice_outfit",
			["ecolog"] = "ecolog_guard_outfit",
			["monolith"] = "monolith_novice_outfit"
		}
		give_object_to_actor(f[faction] or "novice_outfit")		
	end 
	
	local level_name = sim:level_name(game_graph():vertex(se_obj.m_game_vertex_id):level_id())
	if (level_name == level.name()) then 
		-- cancel all not-story tasks
		local task_info = task_manager.get_task_manager().task_info
		local task_ini = task_manager.task_ini
		for task_id,tbl in pairs(task_info) do
			if not (tbl.storyline) then 
				tbl.forced_status = "fail"
				tbl.cancelled_by_actor = true
			end
		end
	
		local hud = get_hud()
		hud:HidePdaMenu()
		hud:HideActorMenu()
		db.actor:set_actor_position(se_obj.position)
		level.disable_input()
		level.remove_cam_effector(210409)
		level.add_cam_effector("camera_effects\\prison_1.anm", 210409, false, "survival_mode.cam_effector_end")
		level.add_pp_effector("deimos1.ppe", 210410, false)
		safe_release_manager.release(se_obj)
	else 
		local function tele_me_now(id)
			local se_obj = id and alife():object(id)
			if not (se_obj) then
				return false 
			end
			axr_main.config:w_value("temp","azazel_death",se_obj.id)
			ChangeLevel(se_obj.position,se_obj.m_level_vertex_id,se_obj.m_game_vertex_id,vector():set(0,0,0))
			return true
		end
		level.add_pp_effector("deimos1.ppe", 210410, false)
		CreateTimeEvent(0,"tele",0,tele_me_now,se_obj.id)
	end
	flags.ret_value = false
end

function cam_effector_end()
	level.enable_input()
	db.actor:set_health_ex(1)
	db.actor.psy_health = 1
	db.actor.bleeding = 1
	db.actor.radiation = -1
	db.actor.power = 1
	bind_stalker_ext.invulnerable_time = nil
end