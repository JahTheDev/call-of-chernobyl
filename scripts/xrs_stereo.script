--[[
xStream 02.2008
]]
class "stereo_sound"
function stereo_sound:__init()
	self.both = nil
	self.end_time=nil
end

function stereo_sound:initialize(sound,lvl)
	if self.both then self:stop() end	
	self.both = sound_object(sound)
	self.end_time = nil
	if not self.both then
		abort("stereo_sound:initialize: Cannot open sound file "..sound)
		return
	end
	if lvl then
		self:set_volume(lvl)
	end
end

function stereo_sound:play()
    if not db.actor then
		return
	end
	local both = self.both
	both:play(db.actor,0, sound_object.s2d)
	self.end_time = time_global() + both:length()
	return self.end_time
end

function stereo_sound:play_at_time(time, sound, lvl)
	self.end_time = nil
	self.both:attach_tail(sound)
	if lvl then
		self:set_volume(lvl)
	end
	local both_tail = sound_object(sound)
	self.both_tail = both_tail
	if not both_tail then
		abort("stereo_sound:initialize: Cannot open sound file "..sound)
		return
	end
	self.end_time = time + both_tail:length()
	return self.end_time
end

function stereo_sound:playing()
	local both = self.both
	return both and both:playing()
end

function stereo_sound:update(vol)
	if vol and self:playing() then self:set_volume(vol)end
end

function stereo_sound:stop()
	local both = self.both
	if both and both:playing() then both:stop() end
end

function stereo_sound:length()
	local both = self.both
	return both and both:length() or 1
end

function stereo_sound:set_volume(num)
	local both = self.both
	if both then both.volume=num end
end
