-- Extensions to Game Options


--- IMPORTANT! SEE opt_menu_on_init to add a new game options (new as of 5/28/2016)

function opt_menu_on_init(menu)
	-- simply add new line and a ui_mm_<name> in ui_st_mm.xml to create a new option. Script automatically does the rest for you
	menu.gameplay_options["debug_hud"]			= {default=false, 	debug_only=true, 	typ="check"}
	menu.gameplay_options["radio_mod"]			= {default=true, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["mechanic_feature"]	= {default=false, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["heli_engine_sound"]	= {default=true, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["heli_spawn"]			= {default=true, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["dynamic_news"]		= {default=true, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["sleep_deprived"]		= {default=false, 	debug_only=false, 	typ="check"}
	menu.gameplay_options["excl_dist"]			= {default=30, 		debug_only=false, 	typ="list", list={10,20,30,40,50,60,70,80,90,100,200,500}}

    -- axr option default config
    local need_save

    for k,v in pairs(menu.gameplay_options) do
		if (v.default ~= nil) then
			if (v.typ=="check") then
				if not (axr_main.config:KeyExist("mm_options","enable_"..k)) then
					axr_main.config:SetValue("mm_options","enable_"..k,v.default)
					need_save = true
				end
			elseif not (axr_main.config:KeyExist("mm_options",k)) then
				axr_main.config:SetValue("mm_options",k,v.default)
				need_save = true
			end
		end
    end
 
    if (need_save) then
        axr_main.config:Save()
    end
end

function opt_menu_on_accept(menu,optMgr,console)
    for name,v in pairs(menu.gameplay_options) do
		if (v.default ~= nil) then
			if (v.typ=="check") then
				axr_main.config:SetValue("mm_options","enable_"..name,v.ctrl:GetCheck())
			elseif (v.typ=="list") then 
				axr_main.config:SetValue("mm_options",name,v.ctrl:GetText())
			end
		end
    end
	
    if (level.present() and dynamic_news_manager) then
        if (axr_main.config:GetValue("mm_options","enable_dynamic_news",1,true) == true) then
            dynamic_news_manager.get_dynamic_news()
        else
            dynamic_news_manager.destroy_dynamic_news()
        end
    end
 
    axr_main.config:Save()
end

function opt_menu_on_set_values(menu,optMgr)
    for name,v in pairs(menu.gameplay_options) do
		if (v.default ~= nil) then
			if (v.typ=="check") then
				v.ctrl:SetCheck(axr_main.config:GetValue("mm_options","enable_"..name,1,v.default))
			elseif (v.typ=="list") then 
				v.ctrl:SetText(axr_main.config:GetValue("mm_options",name,0,v.default))
			end
		end
    end
end